
openapi: 3.0.1
info:
  version: 1.0.0
  title: pÂ·d programming.dev API
servers:
  - url: http://127.0.0.1:3000
paths:
  /up:
    get:
      summary: Check API Health
      responses:
        '200':
          description: Application is up
        '500':
          description: Application is down or encountering an error

  /communities:
    get:
      summary: Get all communities
      responses:
        '200':
          description: List of communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  communities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Community'
        '401':
          description: Unauthorized
        '404':
          description: Communities not found
        '400':
          description: Bad Request

    post:
      summary: Create a new community
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community'
      responses:
        '201':
          description: Community created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
      # Security requirements for future endpoints
      security:
        - bearerAuth: []

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: Users not found
        '400':
          description: Bad Request
      # Security requirements for future endpoints
      # security:
      #   - BearerAuth: []

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
      # Security requirements for future endpoints
      # security:
      #   - BearerAuth: []

components:
  schemas:
    User:
      description: Represents a user in the application.
      properties:
        id:
          type: integer
          description: Unique identifier for the user.
        email:
          type: string
          maxLength: 255
          minLength: 5
          description: Email address of the user.
        api_key:
          type: string
          description: API key generated for the user.
        created_at:
          type: string
          format: date-time
          description: Date and time when the user was created.
        updated_at:
          type: string
          format: date-time
          description: Date and time when the user was last updated.
        user_avatar:
          type: string
          description: Attachment for user avatar.
        user_banner:
          type: string
          description: Attachment for user banner.
        relations:
          comments:
            type: array
            items:
              $ref: '#/components/schemas/Comment'
            description: Comments created by the user.
          posts:
            type: array
            items:
              $ref: '#/components/schemas/Post'
            description: Posts created by the user.
          comment_likes:
            type: array
            items:
              $ref: '#/components/schemas/CommentLike'
            description: Likes given by the user on comments.
          post_likes:
            type: array
            items:
              $ref: '#/components/schemas/PostLike'
            description: Likes given by the user on posts.
          saved_posts:
            type: array
            items:
              $ref: '#/components/schemas/SavedPost'
            description: Posts saved by the user.
          saved_comments:
            type: array
            items:
              $ref: '#/components/schemas/SavedComment'
            description: Comments saved by the user.
        required:
          - email

    ActiveStorageAttachment:
      type: object
      required:
        - name
        - record_type
        - record_id
        - blob_id
        - created_at
      properties:
        id:
          type: integer
        name:
          type: string
        record_type:
          type: string
        record_id:
          type: integer
        blob_id:
          type: integer
        created_at:
          type: string
          format: date-time

    ActiveStorageBlob:
      type: object
      required:
        - key
        - filename
        - service_name
        - byte_size
        - created_at
      properties:
        id:
          type: integer
        key:
          type: string
        filename:
          type: string
        content_type:
          type: string
        metadata:
          type: object
        service_name:
          type: string
        byte_size:
          type: integer
        checksum:
          type: string
        created_at:
          type: string
          format: date-time

    ActiveStorageVariantRecord:
      type: object
      required:
        - blob_id
        - variation_digest
      properties:
        id:
          type: integer
        blob_id:
          type: integer
        variation_digest:
          type: string

    CommentLike:
      type: object
      required:
        - user_id
        - comment_id
        - positive
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        comment_id:
          type: integer
        positive:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Comment:
      type: object
      required:
        - body
        - created_at
        - updated_at
        - user_id
        - community_id
        - post_id
      properties:
        id:
          type: integer
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: integer
        community_id:
          type: integer
        post_id:
          type: integer
        parent_id:
          type: integer

    Community:
      type: object
      required:
        - identifier
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        identifier:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PostLike:
      type: object
      required:
        - user_id
        - post_id
        - positive
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        post_id:
          type: integer
        positive:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Post:
      type: object
      required:
        - title
        - created_at
        - updated_at
        - user_id
        - community_id
      properties:
        id:
          type: integer
        title:
          type: string
        url:
          type: string
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: integer
        community_id:
          type: integer

    SavedComment:
      type: object
      required:
        - user_id
        - comment_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        comment_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SavedPost:
      type: object
      required:
        - user_id
        - post_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        post_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT